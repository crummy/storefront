service: simple-sell

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource: "*"
    - Effect: Allow
      Action:
        - "ssm:GetParameter"
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - "Fn::GetAtt": [ shopConfigTable, Arn ]

  environment:
    SHOP_CONFIG_TABLE: shop-config-${self:provider.stage} # TODO: grab this from where it's declared
    ORDER_TABLE: order-${self:provider.stage} # TODO: grab this from where it's declared
    STRIPE_API_KEY: ${ssm:/api/${self:provider.stage}/stripe-api-key~true}
    GOOGLE_API_KEY: ${ssm:/api/${self:provider.stage}/google-api-key~true}

package:
  exclude:
    - ui/**
    - src/**
    - cloudformation/**
    - Makefile
    - scripts/**
  include:
    - dist/**
    - package.json
    - package-lock.json

functions:
  getShop:
    handler: dist/handler.getShop
    events:
      - http:
          path: shop/{id}
          method: GET
          cors: true

  checkout:
    handler: dist/handler.checkout
    events:
      - http:
          path: shop/{id}/checkout
          method: post
          cors: true

resources:
  Resources:
    shopConfigTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: shop-config-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
    orderTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: order-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

  Outputs:
    TableName:
      Value:
        Ref: shopConfigTable
      Description: Shop configuration table

plugins:
  - serverless-domain-manager
  - serverless-prune-plugin
  - serverless-offline

custom:
  prune:
    automatic: true
    number: 3
    includeLayers: true
  customDomain:
    domainName: ${self:provider.stage}.storefront.nz
    certificateName: "*.storefront.nz"
    createRoute53Record: true
    stage: ${self:provider.stage}
    endpointType: 'regional'